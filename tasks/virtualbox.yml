---
- name: install virtualbox
  kewlfft.aur.aur:
    name:
      - virtualbox-host-modules-arch
      - virtualbox
      - virtualbox-ext-oracle
      - vagrant
    state: present

- name: load vboxdrv
  modprobe:
    name: vboxdrv
    state: present
  become: yes

- name: create share/vbox
  file:
    name: "/home/{{ username }}/share/vbox"
    state: directory

- name: stat .config/VirtualBox
  stat:
    name: "/home/{{ username }}/.config/VirtualBox"
  register: config_vbox_stat

- name: sync .config/VirtualBox
  synchronize:
    perms: yes
    recursive: yes
    src:  "/home/{{ username }}/.config/VirtualBox"
    dest: "/home/{{ username }}/share/vbox"
  when: "config_vbox_stat.stat.exists and
    (config_vbox_stat.stat.lnk_source is not defined or
    config_vbox_stat.stat.lnk_source != '/home/' + username + '/share/vbox')"

- name: remove .config/VirtualBox
  file:
    name: "/home/{{ username }}/.config/VirtualBox"
    state: absent
  when: "config_vbox_stat.stat.lnk_source is not defined or
    config_vbox_stat.stat.lnk_source != '/home/' + username + '/share/vbox'"

- name: link .config/VirtualBox
  file:
    src: "/home/{{ username }}/share/vbox"
    dest: "/home/{{ username }}/.config/VirtualBox"
    force: yes
    state: link

- name: check if VirtualBox.xml exists
  stat:
    name: "/home/{{ username }}/share/vbox/VirtualBox.xml"
  register: virtualbox_xml

- name: configure VirtualBox
  lineinfile:
    path: "/home/{{ username }}/.config/VirtualBox/VirtualBox.xml"
    regexp: "^(.*defaultMachineFolder=['\"])/home/{{ username }}/VirtualBox VMs(['\"].*)$"
    line: '\1/home/{{ username }}/share/vbox/vms\2'
    create: no
    backrefs: yes
  when: virtualbox_xml.stat.exists
