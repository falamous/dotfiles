---
- name: prepare
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: configure git email
      ini_file:
        path: '/home/{{ username }}/.gitconfig'
        section: user
        option: email
        value: falamous@mail.ru

    - name: configure git username
      ini_file:
        path: '/home/{{ username }}/.gitconfig'
        section: user
        option: name
        value: falamous

    - name: configure git editor
      ini_file:
        path: '/home/{{ username }}/.gitconfig'
        section: core
        option: editor
        value: nvim

    - name: edit pacman.conf
      blockinfile:
        path: /etc/pacman.conf
        block: |
          [options]
          Color
          ParallelDownloads = 16
          [multilib]
          Include = /etc/pacman.d/mirrorlist
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
      register: pacman_conf
      become: yes

    - name: read /etc/pacman.conf
      slurp:
        src: /etc/pacman.conf
      register: pacman_conf

    - name: add blackarch repos
      shell: 'sh -c "$(curl https://blackarch.org/strap.sh)"'
      become: yes
      when: '"blackarch" not in pacman_conf'

    - name: pacman -Sy
      pacman:
        update_cache: yes
      when: pacman_conf.changed
      become: yes

    - name: link xinitrc
      file:
        src: '{{ playbook_dir }}/xinitrc'
        dest: '/home/{{ username }}/.xinitrc'
        state: link
    - name: link Xresources
      file:
        src: '{{ playbook_dir }}/Xresources'
        dest: '/home/{{ username }}/.Xresources'
        state: link
    - name: link config
      file:
        src: '{{ playbook_dir }}/config'
        dest: '/home/{{ username }}/.config'
        state: link
    - name: link scripts
      file:
        src: '{{ playbook_dir }}/scripts'
        dest: '/home/{{ username }}/scripts'
        state: link

    - name: create ~/wq
      file:
        name: '/home/{{ username }}/wq'
        state: directory

    - name: zshenv
      copy:
        content: 'source ~/.config/zsh/zshenv'
        dest: '/home/{{ username }}/.zshenv'

    - name: install base-devel and git for yay
      pacman:
        name:
          - base-devel
          - git
        state: present
      become: yes
    - name: install yay
      kewlfft.aur.aur:
        name: yay
        state: present
        use: makepkg
    - name: install rsync
      kewlfft.aur.aur:
        name: rsync
        state: present

    # - name: copy ~/ files
    #   synchronize:
    #     src: "{{ home_files_location }}"
    #     dest: "/home/{{ username }}"
    #   become: yes
    # - name: chown ~/ files
    #   file:
    #     path: "/home/{{ username }}"
    #     owner: {{ username }}
    #     recurse: yes
    #   become: yes

    - name: create share
      file:
        name: "/home/{{ username }}/share"
        state: directory
    - name: create src
      file:
        name: "/home/{{ username }}/share/src"
        state: directory
    - name: create tools
      file:
        name: "/home/{{ username }}/share/tools"
        state: directory
    - name: create ssh
      file:
        name: "/home/{{ username }}/share/ssh"
        state: directory
    - name: create local
      file:
        name: "/home/{{ username }}/share/local"
        state: directory

    - name: link src
      file:
        src:  "/home/{{ username }}/share/src"
        dest: "/home/{{ username }}/src"
        state: link
    - name: link tools
      file:
        src:  "/home/{{ username }}/share/tools"
        dest: "/home/{{ username }}/tools"
        state: link
    - name: link .ssh
      file:
        src:  "/home/{{ username }}/share/ssh"
        dest: "/home/{{ username }}/.ssh"
        state: link

    - name: stat .local
      stat:
        name: "/home/{{ username }}/.local"
      register: dot_local_stat
    - name: sync .local
      synchronize:
        perms: yes
        recursive: yes
        src:  "/home/{{ username }}/.local"
        dest: "/home/{{ username }}/share/local"
      when: "dot_local_stat.stat.exists and (dot_local_stat.stat.lnk_source is not defined or
        dot_local_stat.stat.lnk_source != '/home/' + username + '/share/local')"
    - name: remove .locale
      file:
        name: "/home/{{ username }}/.local"
        state: absent
      when: "dot_local_stat.stat.lnk_source is not defined or
        dot_local_stat.stat.lnk_source != '/home/' + username + '/share/local'"

    - name: link .local
      file:
        src:  "/home/{{ username }}/share/local"
        dest: "/home/{{ username }}/.local"
        state: link

- name: install and configure packages
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: setup timezone
      timezone:
        name: Europe/Moscow
        hwclock: UTC
      become: yes

    - import_tasks: tasks/locale.yml

    - name: xorg
      kewlfft.aur.aur:
        name:
          - xorg
          - xclip
        state: present

    - name: window manager and graphical tools
      kewlfft.aur.aur:
        name:
          - qtile
          - python-xkbgroup
          - python-xlib
          - picom
          - unclutter
          - dunst
          - light
          - rofi
          - rofi-greenclip
          - flameshot
          - sxiv
          - zathura
          - zathura-pdf-mupdf
          - zathura-djvu
          - zathura-ps
          - mpv
          - xwallpaper
          - pinta
          - alacritty
          - xdg-user-dirs
          - xdotool
        state: present

    - name: create ~/downloads
      file:
        name: "/home/{{ username }}/downloads"
        state: directory

    - name: programming languages and libraries
      kewlfft.aur.aur:
        name:
          - nodejs
          - npm
          - yarn
          - php
          - go
          - cuda
          - gcc
          - gtk2
          - sdl
          - clang
          - cmake
          - ruby
          - python2
          - pypy3
        state: present

    - name: create .config/npm
      file:
        name: "/home/{{ username }}/.config/npm"
        state: directory

    - name: edit npmrc
      blockinfile:
        path: "/home/{{ username }}/.config/npm/npmrc"
        block: |
          prefix=${XDG_DATA_HOME}/npm
          cache=${XDG_CACHE_HOME}/npm
          tmp=${XDG_RUNTIME_DIR}/npm
          init-module=${XDG_CONFIG_HOME}/npm/npm-init.js
        marker: "// {mark} ANSIBLE MANAGED BLOCK"
        create: yes

    - name: copy .gtkrc-2.0
      copy:
        src: "{{ playbook_dir }}/config/gtk-2.0/gtkrc-2.0"
        dest: "/home/{{ username }}/.gtkrc-2.0"

    - import_tasks: tasks/ly.yml

    - import_tasks: tasks/nvim.yml

    - import_tasks: tasks/zsh.yml

    - name: fonts and themes
      kewlfft.aur.aur:
        name:
          - ttf-courier-prime-code
          - adobe-source-code-pro-fonts
          - ttf-nerd-fonts-symbols
          - ttf-symbola
          - xcursor-hacked-white
          - materia-gtk-theme
          - kvantum
        state: present

    - name: internet tools
      kewlfft.aur.aur:
        name:
          - iw
          - wpa_supplicant
          - bind
          - iputils
          - gnu-netcat
          - nmap
          - socat
          - net-tools
          - ntp
          - wireshark-qt
          - gobuster
        state: present

    - import_tasks: tasks/gdb.yml

    - name: z3
      kewlfft.aur.aur:
        name:
          - z3
          - python-z3
        state: present

    - name: tesseract
      kewlfft.aur.aur:
        name:
          - tesseract
          - tesseract-data-rus
          - python-pyocr
        state: present

    - name: python and python libs
      kewlfft.aur.aur:
        name:
          - python
          - python-requests
          - python-certifi
          - python-pip
          - python-gmpy2
          - python-flask
          - python-django
          - python-numpy
          - python-sympy
          - python-psutil
          - python-pyperclip
          - ipython
        state: present

    - name: python and python libs
      kewlfft.aur.aur:
        name:
          - wine
          - wine-mono
          - wine-gecko
        state: present
 
    - name: qemu and crosscompiling
      kewlfft.aur.aur:
        name:
          - qemu
          - qemu-arch-extra
          - aarch64-linux-gnu-gcc
          - aarch64-linux-gnu-binutils
        state: present

    - import_tasks: tasks/tabbed.yml
    - import_tasks: tasks/slock.yml

    - name: daemons
      kewlfft.aur.aur:
        name:
          - cronie
          - tor
          - obfs4proxy
          - torsocks
          - privoxy
          - docker
          - docker-compose
        state: present

    - name: configure privoxy
      blockinfile:
        path: '/etc/privoxy/config'
        block: "forward-socks5 / localhost:9050 ."
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        create: yes
      become: yes

    - name: configure tor
      blockinfile:
        path: '/etc/tor/torrc'
        block: |
          ClientTransportPlugin obfs4 exec /usr/bin/obfs4proxy
          ExtORPort auto
          UseBridges 1
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        create: yes
      become: yes

    - name: enable cronie
      systemd:
        name: cronie
        state: started
        enabled: yes
        masked: no
      become: yes

    - name: cli utilities
      kewlfft.aur.aur:
        name:
          - man
          - man-pages
          - ripgrep
          - lsd
          - zip
          - unzip
          - evtest
          - sqlite
          - sqlitebrowser
          - p7zip
          - wget
          - aria2
          - pv
          - bat
          - imagemagick
          - mlocate
          - bootiso
          - openssh
          - sshpass
          - neofetch
        state: present

    - name: create .config/wgetrc
      blockinfile:
        path: '/home/{{ username }}/.config/wgetrc'
        block: "hsts-file = /home/{{ username }}/.cache/wget-hsts"
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        create: yes

    - name: disable account locking after 3 wrong passwords
      blockinfile:
        path: '/etc/security/faillock.conf'
        block: "deny = 31337"
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
      become: yes


    - name: add updatedb to cron
      cron:
        name: update db
        hour: 18
        job: "updatedb"
      become: yes

    - name: reverse and pwn stuff
      kewlfft.aur.aur:
        name:
          - radare2
          - r2ghidra
          - ghidra
          - ropper
          - strace
          - ltrace
          - python-pwntools
          - python-uncompyle6
          - ropper
          - ropgadget
        state: present

    - name: add the user to useful groups
      user:
        name: "{{ username }}"
        groups: 
          - wireshark
          - uucp
          - proc
          - video
          - audio
          - docker
          - input
          - wheel
        append: yes
      become: yes

    - name: install pipewire, extensions and related packages
      kewlfft.aur.aur:
        name:
          - pipewire
          - pipewire-pulse
          - pipewire-alsa
          - pulsemixer
        state: present

    - name: communication apps
      kewlfft.aur.aur:
        name:
          - telegram-desktop
          - discord
          - vk-messenger
        state: present

    - import_tasks: tasks/changemac.yml

    - name: link /bin/vi to neovim
      file:
        src: /bin/nvim
        dest: /bin/vi
        state: link
        force: yes
      become: yes

    - name: edit hwdb (CAPS to escape)
      blockinfile:
        path: /etc/udev/hwdb.d/generic-keyboard.hwdb
        block: |
          evdev:input:*
            KEYBOARD_KEY_70039=esc
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        create: yes
      become: yes

    - name: edit hwdb (laptop keys)
      blockinfile:
        path: /etc/udev/hwdb.d/notebook-keyboard.hwdb
        block: |
          evdev:input:b0003v0B05p1866e0110*
            KEYBOARD_KEY_c00ea=home
            KEYBOARD_KEY_c00e9=end
            KEYBOARD_KEY_7004c=insert
            KEYBOARD_KEY_ff31007c=pageup
            KEYBOARD_KEY_ff310038=pagedown
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        create: yes
      become: yes

    - name: stat /sys/devices/virtual/dmi/id/product_name
      stat:
        path: "/sys/devices/virtual/dmi/id/product_name"
      register: dmi_product_name
    - name: setup laptop specific tools
      include_tasks: tasks/laptop.yml
      when: "dmi_product_name.stat.exists and
        'ROG Zephyrus' in lookup('file',
        '/sys/devices/virtual/dmi/id/product_name')"

    - import_tasks: tasks/mpd.yml



    - name: browsers
      kewlfft.aur.aur:
        name:
          - torbrowser-launcher
          - chromium
          - firefox
          - google-chrome
        state: present

    - name: create share/mozilla
      file:
        name: '/home/{{ username }}/share/mozilla'
        state: directory
    - name: link mozilla
      file:
        src: '/home/{{ username }}/share/mozilla'
        dest: '/home/{{ username }}/.mozilla'
        state: link

    - import_tasks: tasks/pass.yml
    
    - import_tasks: tasks/virtualbox.yml

    # - name: update time
    #   shell: "ntpdate pool.ntp.org && hwclock -w"
    #   become: yes

    - name: cleanup .cargo
      file:
        name: '/home/{{ username }}/.cargo'
        state: absent

    - name: cleanup .bash_history
      file:
        name: '/home/{{ username }}/.bash_history'
        state: absent
    # - name: set firefox as default browser 
    #   shell: "firefox --setDefaultBrowser"
