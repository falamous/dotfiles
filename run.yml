---
- name: prepare
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: configure git
      copy:
        content: |
          [user]
              email = falamous@mail.ru
              name = falamous
        dest: '/home/{{ username }}/.gitconfig'
    - name: edit pacman.conf
      blockinfile:
        path: /etc/pacman.conf
        block: |
          [options]
          ParallelDownloads = 16
          [multilib]
          Include = /etc/pacman.d/mirrorlist
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
      become: yes
    - name: install yay
      kewlfft.aur.aur:
        name: yay
        state: present
        use: makepkg
    - name: install rsync
      kewlfft.aur.aur:
        name: rsync
        state: present
    - name: link config and x files
      file:
        src: '/home/{{username}}/{{ repo_location }}/xinitrc'
        dest: '/home/{{ username }}/.xinitrc'
        state: link
      file:
        src: '/home/{{username}}/{{ repo_location }}/Xresources'
        dest: '/home/{{ username }}/.Xresources'
        state: link
      file:
        src: '/home/{{username}}/{{ repo_location }}/config'
        dest: '/home/{{ username }}/.config'
        state: link
      file:
        src: '/home/{{username}}/{{ repo_location }}/scripts'
        dest: '/home/{{ username }}/scripts'
        state: link
    - name: zshenv
      copy:
        content: 'source ~/.config/zsh/zshenv'
        dest: '/home/{{ username }}/.zshenv'
    # - name: copy ~/ files
    #   synchronize:
    #     src: "{{ home_files_location }}"
    #     dest: "/home/{{ username }}"
    #   become: yes
    # - name: chown ~/ files
    #   file:
    #     path: "/home/{{ username }}"
    #     owner: falamous
    #     recurse: yes
    #   become: yes
    - name: link .mozilla
      file:
        name: '/home/{{username}}/share/mozilla'
        state: directory
      file:
        src: '/home/{{username}}/share/mozilla'
        dest: '/home/{{ username }}/.mozilla'
        state: link


- name: install and configure packages
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: setup timezone
      file:
        src: /usr/share/zoneinfo/Europe/Moscow
        dest: /etc/localtime
        state: link 
      become: yes

    - import_tasks: tasks/locale.yml


    - name: xorg
      loop:
        - xorg
        - xclip
      include_role:
        name: aur_install

    - name: window manager and graphical tools
      loop:
        - qtile
        - picom
        - unclutter
        - dunst
        - light
        - rofi
        - rofi-greenclip
        - flameshot
        - sxiv
        - mpv
        - xwallpaper
        - pinta
      include_role:
        name: aur_install

    - import_tasks: tasks/nvim.yml

    - import_tasks: tasks/zsh.yml

    - name: fonts
      loop:
        - ttf-courier-prime-code
        - adobe-source-code-pro-fonts
        - ttf-nerd-fonts-symbols
        - ttf-symbola
      include_role:
        name: aur_install

    - name: browsers
      loop:
        - torbrowser-launcher
        - chromium
        - google-chrome
      include_role:
        name: aur_install

    - name: net tools
      loop:
        - iw
        - wpa_supplicant
        - bind
        - iputils
        - gnu-netcat
        - socat
        - net-tools
        - ntp
        - wireshark-qt
      include_role:
        name: aur_install

    - import_tasks: tasks/gdb.yml

    - name: z3
      loop:
        - z3
        - python-z3
      include_role:
        name: aur_install

    - name: tesseract
      loop:
        - tesseract
        - tesseract-data-rus
        - python-pyocr
      include_role:
        name: aur_install

    - name: python and python libs
      loop:
        - python
        - python-gmpy2
        - python-flask
        - python-django
        - python-numpy
        - python-sympy
        - python-psutil
        - ipython
      include_role:
        name: aur_install

    - name: python and python libs
      loop:
        - wine
        - wine-mono
        - wine-gecko
      include_role:
        name: aur_install

    - name: programming languages
      loop:
        - nodejs
        - php
        - gcc
        - go
        - clang
        - ruby
        - python2
        - pypy3
      include_role:
        name: aur_install

    - name: qemu and crosscompiling
      loop:
        - qemu
        - qemu-arch-extra
        - aarch64-linux-gnu-gcc
        - aarch64-linux-gnu-binutils
      include_role:
        name: aur_install

    - import_tasks: tasks/tabbed.yml

    - name: cli utilities
      loop:
        - cronie
        - docker
        - docker-compose
      include_role:
        name: aur_install

    - name: enable cronie
      systemd:
        name: cronie
        state: started
        enabled: yes
        masked: no
      become: yes

    - name: cli utilities
      loop:
        - ripgrep
        - lsd
        - zip
        - unzip
        - p7zip
        - wget
        - aria2c
        - pv
        - imagemagick
        - mlocate
        - bootiso
      include_role:
        name: aur_install

    - name: add updatedb to cron
      cron:
        name: update db
        hour: 18
        job: "updatedb"
      become: yes

    - name: reverse and pwn stuff
      loop:
        - radare2
        - r2ghidra
        - ghidra
        - ropper
        - strace
        - ltrace
        - python-pwntools
        - ropper
        - ropgadget
      include_role:
        name: aur_install

    - name: add the user to useful groups
      user:
        name: "{{ username }}"
        groups: 
          - wireshark
          - uucp
          - video
          - audio
          - docker
          - input
          - wheel
        append: yes
      become: yes

    - name: install pipewire, extensions and related packages
      loop:
        - pipewire
        - pipewire-pulse
        - pipewire-alsa
        - pipewire-jack
        - pulsemixer
      include_role:
        name: aur_install

    - name: communication apps
      loop:
        - telegram-desktop
        - discord
        - vk-messenger
      include_role:
        name: aur_install

    - name: add mac-randomization scripts
      copy:
        src: "scripts/macgen"
        dest: "/bin/macgen"
      copy:
        src: "scripts/changemac"
        dest: "/bin/changemac"
      become: yes

    - name: enable mac-randomization script
      cron:
        name: macgen
        day: 13
        job: macgen
      become: yes

    - name: edit root bashrc
      blockinfile:
        path: /root/.bashrc
        block: |
          export EDITOR=nvim
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        create: yes
      become: yes

    - name: edit hwdb
      blockinfile:
        path: /etc/udev/hwdb.d/generic-keyboard.hwdb
        block: |
          evdev:input:*
            KEYBOARD_KEY_70039=esc
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        create: yes
      become: yes

      blockinfile:
        path: /etc/udev/hwdb.d/notebook-keyboard.hwdb
        block: |
          evdev:input:b0003v0B05p1866e0110*
            KEYBOARD_KEY_c00ea=home
            KEYBOARD_KEY_c00e9=end
            KEYBOARD_KEY_7004c=insert
            KEYBOARD_KEY_ff31007c=pageup
            KEYBOARD_KEY_ff310038=pagedown
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        create: yes
      become: yes

    - import_tasks: tasks/asusctl.yml
    - import_tasks: tasks/mpd.yml

    - name: update time
      shell: "ntpdate pool.ntp.org"
      become: yes
